# Generated by Otto, do not edit!
#
# This is the Vagrantfile generated by Otto for the development of
# this application/service. It should not be hand-edited. To modify the
# Vagrantfile, use the Appfile.

Vagrant.configure("2") do |config|
  if ENV["OTTO_VAGRANT_LAYER_PATH"]
    config.vm.clone = ENV["OTTO_VAGRANT_LAYER_PATH"]
  else
    config.vm.box = "hashicorp/precise64"
    config.vm.box_check_update = false
    config.vm.provider :parallels do |p, o|
      o.vm.box = "parallels/ubuntu-12.04"
    end
  end
  

  # Host only network
  config.vm.network "private_network", ip: "100.79.27.236"

  
  # Setup a synced folder from our working directory to /vagrant
  config.vm.synced_folder '../', "/vagrant",
    owner: "vagrant", group: "vagrant"
  

  # Enable SSH agent forwarding so getting private dependencies works
  config.ssh.forward_agent = true

  # Foundation configuration (if any)
  
  dir = "/otto/foundation-1"
  config.vm.synced_folder "#{__dir__}/foundation-consul/app-dev", dir
  config.vm.provision "shell", inline: "cd #{dir} && bash #{dir}/main.sh"

  # ScriptPacks
  dir = "/otto/scriptpacks"
  config.vm.provision "shell", inline: "sudo rm -rf #{dir}; sudo mkdir -p #{dir}; sudo chmod 0777 #{dir}"
  
  config.vm.provision "file", source: "#{__dir__}/scriptpacks/STDLIB.tar.gz", destination: "#{dir}/STDLIB.tar.gz"
  config.vm.provision "shell", inline: "cd #{dir}; sudo mkdir STDLIB; sudo tar xzf STDLIB.tar.gz -C STDLIB"
  
  config.vm.provision "file", source: "#{__dir__}/scriptpacks/RUBY.tar.gz", destination: "#{dir}/RUBY.tar.gz"
  config.vm.provision "shell", inline: "cd #{dir}; sudo mkdir RUBY; sudo tar xzf RUBY.tar.gz -C RUBY"
  

  # Load all our fragments here for any dependencies.
  

  # Use linked clones if possible
  config.vm.provider "virtualbox" do |p|
    p.linked_clone = true
  end

  if Vagrant.has_plugin?("vagrant-parallels", ">= 1.6.0")
    config.vm.provider "parallels" do |p|
      p.linked_clone = true
    end
  end

  # This is to work around some bugs right now
  ["vmware_fusion", "vmware_workstation"].each do |name|
    config.vm.provider(name) do |p|
      p.enable_vmrun_ip_lookup = false
    end
  end

  
  config.vm.provision "shell", inline: $script_app, privileged: false

end




$script_app = <<SCRIPT
. /otto/scriptpacks/STDLIB/main.sh
. /otto/scriptpacks/RUBY/main.sh
otto_init

# Configuring SSH for faster login
vagrant_config_fast_ssh

# Some params
export RUBY_VERSION="2.2"

otto_output "Updating apt..."
apt_update_once

otto_output "Installing supporting packages..."
apt_install bzr git mercurial build-essential nodejs libpq-dev

otto_output "Installing Ruby ${RUBY_VERSION}. This can take a few minutes..."
ruby_install_prepare
ruby_install ruby-${RUBY_VERSION}

otto_output "Installing Bundler..."
gem install bundler --no-document

otto_output "Configuring Git to use SSH instead of HTTP so we can agent-forward private repo auth..."
git config --global url."git@github.com:".insteadOf "https://github.com/"

vagrant_default_cd "vagrant" "/vagrant"

# Go to our working directory and install gems
cd /vagrant
ruby_gemfile_apt
otto_output "Bundling gem dependencies..."
bundle

SCRIPT

